[package]
name = "leaf"
version = "0.1.2"
authors = ["eycorsican <eric.y.corsican@gmail.com>"]
edition = "2018"
build = "build.rs"

[lib]
name = "leaf"
path = "src/lib.rs"

[features]
default = [
    "all-configs",
    "all-endpoints",
    "ring-aead",
    "rustls-tls",
]

# Grouping all features
all-configs = [
    "config-conf",
    "config-json",
]
all-endpoints = [
    # inbounds
    "inbound-http",
    "inbound-socks",
    "inbound-tun",
    # outbounds
    "outbound-direct",
    "outbound-drop",
    "outbound-redirect",
    "outbound-shadowsocks",
    "outbound-socks",
    "outbound-trojan",
    "outbound-vmess",
    "outbound-tls",
    "outbound-ws",
    "outbound-vless",
    "outbound-h2",
    "outbound-failover",
    "outbound-random",
    "outbound-tryall",
    "outbound-chain",
]

# Ring-related
ring-aead = ["ring"]
rustls-tls = ["tokio-rustls", "webpki-roots"]

# Openssl-related, for platforms not supported by ring, such as mips
openssl-aead = ["openssl"]
openssl-tls = ["openssl", "tokio-openssl", "openssl-probe"]

# Config formats
config-conf = ["regex"]
config-json = ["serde", "serde_derive", "serde_json"]

# Outbounds
outbound-direct = []
outbound-drop = []
outbound-redirect = []
outbound-shadowsocks = ["hkdf", "sha-1", "md-5"]
outbound-socks = ["async-socks5"]
outbound-trojan = ["sha2", "hex"]
outbound-vmess = ["lz_fnv", "cfb-mode", "hmac", "aes", "sha3", "digest", "uuid", "md-5"]
outbound-tls = []
outbound-ws = ["tungstenite", "tokio-tungstenite", "url"]
outbound-h2 = ["h2", "http", "url"]
outbound-vless = ["uuid"]
outbound-failover = []
outbound-random = []
outbound-tryall = []
outbound-chain = []

# Inbounds
inbound-socks = []
inbound-http = ["hyper"]
inbound-tun = ["tun"]

[dependencies]
# Common
tokio = { version = "0.2", features = ["macros", "sync", "io-util", "net", "stream"] }
futures-util = "0.3"
protobuf = "2.17"
socket2 = "0.3"
thiserror = "1.0"
futures = "0.3"
async-trait = "0.1"
byteorder = "1.3"
bytes = "0.5"
lazy_static = "1.4.0"
anyhow = "1.0"
rand = "0.7"

# config-json
serde_json = { version = "1.0", features = ["raw_value"], optional = true }
serde_derive = { version = "1.0", optional = true }
serde = { version = "1.0", optional = true }

# config-conf
regex = { version = "1.3", default-features=false, features=["std", "perf"], optional = true }

# Openssl
openssl = { version = "0.10", features = ["vendored"], optional = true }

# Ring
ring = { version = "0.16", optional = true }

# Router
maxminddb = { version = "0.15.0", features = ["mmap"] }
memmap = "0.7.0"
cidr = { version = "0.1", default-features = false }

# DNS
trust-dns-proto = "*"
lru = "0.6"

# Logging
log = { version = "0.4", features = ["std"] }
fern = { version = "0.5", features = ["colored"] }
chrono = "0.4"
colored = "2.0"

# TLS/rustls
tokio-rustls = { version = "0.14", optional = true }
webpki-roots = { version = "0.20", optional = true }

# TLS/openssl
openssl-probe = { version = "0.1.2", optional = true }
tokio-openssl = { version = "0.4", optional = true }

# WebSocket
tungstenite = { version = "0.11", default-features = false, optional = true }
tokio-tungstenite = { version = "0.11", optional = true }

# WebSocket/HTTP/2
url = { version = "2.1", optional = true }

# HTTP inbound
hyper = { version = "0.13", default-features = false, features = [], optional = true }

# HTTP/2
h2 = { version = "0.2.6", features = ["stream"], optional = true }
http = { version = "0.2", optional = true }

# SOCKS outbound
async-socks5 = { version = "0.3", optional = true }

# VMess
lz_fnv = { version = "0.1", optional = true }
cfb-mode = { version = "0.5", optional = true }
hmac = { version = "0.9", optional = true }
aes = { version = "0.5", optional = true }
sha3 = { version = "0.9", optional = true }
digest = { version = "0.9", optional = true }

# VMess/VLESS
uuid = { version = "0.8", optional = true }

# VMess/Shadowsocks
md-5 = { version = "0.9", optional = true }

# Shadowsocks
hkdf = { version = "0.9", optional = true }
sha-1 = { version = "0.9", optional = true }

# Trojan
sha2 = { version = "0.9", optional = true }
hex = { version = "0.4", optional = true }

# TUN
[target.'cfg(any(target_os = "ios", target_os = "macos", target_os = "linux"))'.dependencies]
tun = { git = "https://github.com/eycorsican/rust-tun.git", branch = "fix", features = ["async"], optional = true }

[build-dependencies]
cc = "1.0"
bindgen = "0.55"
protoc-rust = "2.0"
